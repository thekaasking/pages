---
import { getCollection, getEntry } from 'astro:content';
import BlogPostMeta from "../../components/BlogPostMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";
import { SITE_URL } from "../../config";

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  // we don't want to generate pages for posts that link to external websites
  const filteredPosts = posts
    .filter((p) => p.data.draft !== true)
    .filter(({ data }) => !data.external);

  return filteredPosts.map((post) => {
    return { params: { slug: post.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const post = await getEntry('posts', slug);
if (!post) {
  throw new Error(`Post not found: ${slug}`);
}

const { Content } = await post.render();
const { data: frontmatter } = post;

const ogImageAbsoluteUrl =
  frontmatter.external !== true && frontmatter.ogImagePath
    ? new URL(frontmatter.ogImagePath, SITE_URL).toString()
    : undefined;
---

<ContentLayout title={frontmatter.title} date={frontmatter.date}>
  <BlogPostMeta
    title={frontmatter.title}
    description={frontmatter.external ? undefined : frontmatter.description}
    publishDate={frontmatter.date.toISOString()}
    pagePath={`/blog/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    slot="meta"
  />
  <Content slot="content" />
</ContentLayout>
